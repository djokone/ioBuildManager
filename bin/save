#! /usr/bin/env node
var Io = require('iorizon-cli')
require('iorizon-cli/bin/lib/debugger')
let fs = require('fs')
let path = require('path')

let save = new Io()
// let folder = 
// console.log(save.options)
// console.log(save.current.url)
// console.log(moduleBuildConf)
let success = false
// console.log(save.current.url)
let error = {}
let existInCurrent = function (folder) {
  return fs.existsSync(path.resolve(save.current.url, folder))
}

let glob = require("glob").Glob
let filesGlob = []
let getFiles = function () {
  let options = {
    cwd: save.current.url
  }
  for (let inc of save.options.include) {
    console.log(inc)
    filesGlob.push(new glob(inc, options, function (err, files) {
      console.log(err)
      console.log(files)
    }))
  }
}
getFiles()
// if (!Array.isArray(save.options.folder) && existInCurrent(save.options.include)) {
//   success = true
// } else {
  
//   let inSuccess = true
//   for (let f of save.options.folder) {
//     if (!existInCurrent(f)) {
//       inSuccess = false
//       error[f] = path.normalize(path.resolve(save.current.url))
//     }
//   }
//   if (inSuccess) {
//     success = true
//   }
// }

// if (!success) {
//   for (let err in error) {
//     console.error(err + ' file doesn\'t exist in ' + error[err] + ' folder')
//   }
// }
// if (fs.existsSync(path.resolve(save.current.url, moduleBuildConf.folder))) {

// }
// console.log(save.current.modules.content[save.parentCmd[0]])